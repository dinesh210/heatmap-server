{"version":3,"sources":["/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/$_lazy_route_resource lazy","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.component.css","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.component.html","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.component.ts","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.module.ts","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.service.ts","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/main.ts","/Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"agm-map {\\n  height: 600px;\\n}\\n\\n\\n* {\\n  font-family: Lato;\\n}\\n\\n\\na {\\n  color: darkblue;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\n<agm-map \\n  [latitude]=\\\"lat\\\"\\n  [longitude]=\\\"lng\\\"\\n  [zoom]=\\\"zoom\\\"\\n  [disableDefaultUI]=\\\"false\\\"\\n  [zoomControl]=\\\"false\\\"\\n  (mapClick)=\\\"mapClicked($event)\\\">\\n\\n  <agm-marker \\n      *ngFor=\\\"let m of markers; let i = index\\\"\\n      (markerClick)=\\\"clickedMarker(m.label, i)\\\"\\n      [latitude]=\\\"m.lat\\\"\\n      [longitude]=\\\"m.lng\\\"\\n      [label]=\\\"\\\"\\n      [markerDraggable]=\\\"false\\\"\\n      [iconUrl]=icon\\n      >\\n      \\n    <agm-info-window>\\n      <strong [innerHTML]=\\\"vehicleInfo\\\"></strong>\\n    </agm-info-window>\\n    \\n  </agm-marker>\\n  \\n  <agm-circle *ngFor=\\\"let c of circles; let j = index\\\"\\n  [latitude]=\\\"c.lat\\\" [longitude]=\\\"c.lng\\\" \\n      [radius]=\\\"5000\\\"\\n      [fillColor]=c.heat\\n      [circleDraggable]=\\\"false\\\"\\n      [editable]=\\\"false\\\">\\n  </agm-circle>\\n</agm-map>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { IntervalObservable } from 'rxjs/observable/IntervalObservable';\n\nimport { MouseEvent } from '@agm/core';\nimport 'rxjs/add/observable/interval';\nimport { Observable } from 'rxjs/Rx';\nimport { APPRestService } from './app.service';\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  // google maps zoom level\n  zoom = 9.4;\n  icon = '/assets/vehicle.png';\n  // initial center position for the map\n  lat = 51.51502;\n  lng = -0.204556;\n  lat2 = 51.513465000000004;\n  lng2: number = -0.100127;\n  vehicleInfo = '';\n  color = 'red';\n  markers = [];\n  circles = [];\n  alive = false;\n  // circles: HeatMap[] = [];\n  constructor(private appService: APPRestService) {\n    this.alive = true;\n  }\n\n  ngOnInit() {\n    // get our data immediately when the component inits\n    this.appService.getHeatMap()\n      .first() // only gets fired once\n      .subscribe((data) => {\n        this.circles = data;\n      });\n\n      this.appService.getVehicle()\n      .first() // only gets fired once\n      .subscribe((data) => {\n        this.markers = data;\n      });\n\n    // get our data every subsequent 10 seconds\n    IntervalObservable.create(10000)\n      .takeWhile(() => this.alive) // only fires when component is alive\n      .subscribe(() => {\n        this.appService.getHeatMap()\n          .subscribe(data => {\n            this.circles = data;\n          });\n      });\n\n      IntervalObservable.create(60000)\n      .takeWhile(() => this.alive)\n      .subscribe(() => {\n        this.appService.getVehicle()\n          .subscribe(data => {\n            this.markers = data;\n          });\n      });\n  }\n\n  ngOnDestroy () {\n    this.alive = false; // switches your IntervalObservable off\n  }\n\n  clickedMarker(label: string, index: number) {\n    console.log(index);\n    this.vehicleInfo = 'Number: ' + label + ' <br/>' + ' Location: (' + this.markers[index].lat + ',' + this.markers[index].lng + ')' ;\n  }\n\n  mapClicked($event: MouseEvent) {\n  }\n\n  markerDragEnd(m: Marker, $event: MouseEvent) {\n    console.log('dragEnd', m, $event);\n  }\n\n}\n\n// just an interface for type safety.\nexport interface Marker {\n  lat: number;\n  lng: number;\n  label?: string;\n}\n\nexport interface HeatMap {\n  lat: number;\n  lng: number;\n  heat: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.component.ts","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport {APPRestService} from './app.service';\nimport { AgmCoreModule } from '@agm/core';\nimport { AgmJsMarkerClustererModule } from '@agm/js-marker-clusterer';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\n@NgModule({\n  imports:      [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n    AgmCoreModule.forRoot({\n      // please get your own API key here:\n      // https://developers.google.com/maps/documentation/javascript/get-api-key?hl=en\n      apiKey: 'AIzaSyBQO5BdoHgaOugb0f9L1NPqURZsNSL9imo' + '&libraries=visualization'\n    }),\n    AgmJsMarkerClustererModule\n  ],\n  declarations: [ AppComponent],\n  bootstrap:    [ AppComponent ],\n  providers: [\n    APPRestService\n]\n  // schemas:  [ CUSTOM_ELEMENTS_SCHEMA ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response} from \"@angular/http\";\nimport { Observable } from \"rxjs\";\nimport {HeatMap} from './app.component';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class APPRestService {\n//   private url = 'https://heatmap.cfapps.io'; // full uri of the service to consume here\n\n  constructor(private http: Http) { }\n\n  getHeatMap(): Observable<HeatMap[]> {\n    return this.http\n      .get('/traffic/heatmaps')\n    //   .get(this.url + '/traffic/heatmaps')\n      .map((res: Response) => res.json());\n  }\n\n  getVehicle(): Observable<HeatMap[]> {\n    return this.http\n      .get( '/traffic/vehicles')\n    //   .get(this.url + '/traffic/vehicles')\n      .map((res: Response) => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/app/app.service.ts","import './polyfills';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\n  // Ensure Angular destroys itself on hot reloads.\n  if (window['ngRef']) {\n    window['ngRef'].destroy();\n  }\n  window['ngRef'] = ref;\n\n  // Otherise, log the boot error\n}).catch(err => console.error(err));\n\n\n// WEBPACK FOOTER //\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/main.ts","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol';\n// import 'core-js/es6/object';\n// import 'core-js/es6/function';\n// import 'core-js/es6/parse-int';\n// import 'core-js/es6/parse-float';\n// import 'core-js/es6/number';\n// import 'core-js/es6/math';\n// import 'core-js/es6/string';\n// import 'core-js/es6/date';\n// import 'core-js/es6/array';\n// import 'core-js/es6/regexp';\n// import 'core-js/es6/map';\n// import 'core-js/es6/set';\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/** IE10 and IE11 requires the following to support `@angular/animation`. */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n/** Evergreen browsers require these. **/\nimport 'core-js/es6/reflect';\nimport 'core-js/es7/reflect';\n\n\n/** ALL Firefox browsers require the following to support `@angular/animation`. **/\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n\n\n/***************************************************************************************************\n * Zone JS is required by Angular itself.\n */\nimport 'zone.js/dist/zone';  // Included with Angular CLI.\n\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n\n/**\n * Date, currency, decimal and percent pipes.\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n */\n// import 'intl';  // Run `npm install --save intl`.\n\n\n// WEBPACK FOOTER //\n// /Users/dineshreddychalla/Downloads/Traffice-HeatMap/src/polyfills.ts"],"sourceRoot":"webpack:///"}